Betim Sejdiu

I started this process by making env. This was pretty simple, I simply used the example C file given to us and
implemented that code in bsh.c and instead of printing it I stored the strings into an array.

Then I went and implemented setenv. I started by implementing the logic of setting a new env. This was as simple
as adding the string at the end and incrementing the size of the string array. Implementing the logic of finding
the env variable and seeing if it existed made me need to use string sep. So I just seperated the string with
the delimiter of "=" and compared the string with the env trying to get passed. If I see the env I overwrite the
entire string.

Unsetenv was much easier considering I had the searching logic done in setenv. So I copied that code and when I
found the varaiable I freed it and set that pointer equal to the string in the next iteration of the array until
I went through the array.

Cd

